// Generated by view binder compiler. Do not edit!
package com.hayat.stockprobeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hayat.stockprobeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Addproduct2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText desET;

  @NonNull
  public final TextView desTV;

  @NonNull
  public final TextView headpan;

  @NonNull
  public final EditText instockET;

  @NonNull
  public final TextView instockTV;

  @NonNull
  public final EditText prET;

  @NonNull
  public final TextView prTV;

  @NonNull
  public final EditText srateET;

  @NonNull
  public final TextView srateTV;

  private Addproduct2Binding(@NonNull RelativeLayout rootView, @NonNull EditText desET,
      @NonNull TextView desTV, @NonNull TextView headpan, @NonNull EditText instockET,
      @NonNull TextView instockTV, @NonNull EditText prET, @NonNull TextView prTV,
      @NonNull EditText srateET, @NonNull TextView srateTV) {
    this.rootView = rootView;
    this.desET = desET;
    this.desTV = desTV;
    this.headpan = headpan;
    this.instockET = instockET;
    this.instockTV = instockTV;
    this.prET = prET;
    this.prTV = prTV;
    this.srateET = srateET;
    this.srateTV = srateTV;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Addproduct2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Addproduct2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.addproduct2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Addproduct2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.desET;
      EditText desET = ViewBindings.findChildViewById(rootView, id);
      if (desET == null) {
        break missingId;
      }

      id = R.id.desTV;
      TextView desTV = ViewBindings.findChildViewById(rootView, id);
      if (desTV == null) {
        break missingId;
      }

      id = R.id.headpan;
      TextView headpan = ViewBindings.findChildViewById(rootView, id);
      if (headpan == null) {
        break missingId;
      }

      id = R.id.instockET;
      EditText instockET = ViewBindings.findChildViewById(rootView, id);
      if (instockET == null) {
        break missingId;
      }

      id = R.id.instockTV;
      TextView instockTV = ViewBindings.findChildViewById(rootView, id);
      if (instockTV == null) {
        break missingId;
      }

      id = R.id.prET;
      EditText prET = ViewBindings.findChildViewById(rootView, id);
      if (prET == null) {
        break missingId;
      }

      id = R.id.prTV;
      TextView prTV = ViewBindings.findChildViewById(rootView, id);
      if (prTV == null) {
        break missingId;
      }

      id = R.id.srateET;
      EditText srateET = ViewBindings.findChildViewById(rootView, id);
      if (srateET == null) {
        break missingId;
      }

      id = R.id.srateTV;
      TextView srateTV = ViewBindings.findChildViewById(rootView, id);
      if (srateTV == null) {
        break missingId;
      }

      return new Addproduct2Binding((RelativeLayout) rootView, desET, desTV, headpan, instockET,
          instockTV, prET, prTV, srateET, srateTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
