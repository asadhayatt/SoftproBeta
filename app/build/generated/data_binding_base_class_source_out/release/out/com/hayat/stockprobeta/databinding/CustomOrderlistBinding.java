// Generated by view binder compiler. Do not edit!
package com.hayat.stockprobeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hayat.stockprobeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomOrderlistBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Otitle;

  @NonNull
  public final TextView Tamount;

  @NonNull
  public final TextView orderDate;

  @NonNull
  public final TextView orderID;

  @NonNull
  public final Button viewbtn;

  private CustomOrderlistBinding(@NonNull LinearLayout rootView, @NonNull TextView Otitle,
      @NonNull TextView Tamount, @NonNull TextView orderDate, @NonNull TextView orderID,
      @NonNull Button viewbtn) {
    this.rootView = rootView;
    this.Otitle = Otitle;
    this.Tamount = Tamount;
    this.orderDate = orderDate;
    this.orderID = orderID;
    this.viewbtn = viewbtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomOrderlistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomOrderlistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_orderlist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomOrderlistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Otitle;
      TextView Otitle = ViewBindings.findChildViewById(rootView, id);
      if (Otitle == null) {
        break missingId;
      }

      id = R.id.Tamount;
      TextView Tamount = ViewBindings.findChildViewById(rootView, id);
      if (Tamount == null) {
        break missingId;
      }

      id = R.id.orderDate;
      TextView orderDate = ViewBindings.findChildViewById(rootView, id);
      if (orderDate == null) {
        break missingId;
      }

      id = R.id.orderID;
      TextView orderID = ViewBindings.findChildViewById(rootView, id);
      if (orderID == null) {
        break missingId;
      }

      id = R.id.viewbtn;
      Button viewbtn = ViewBindings.findChildViewById(rootView, id);
      if (viewbtn == null) {
        break missingId;
      }

      return new CustomOrderlistBinding((LinearLayout) rootView, Otitle, Tamount, orderDate,
          orderID, viewbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
