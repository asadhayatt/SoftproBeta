// Generated by view binder compiler. Do not edit!
package com.hayat.stockprobeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hayat.stockprobeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView TVBc;

  @NonNull
  public final TextView TVId;

  @NonNull
  public final TextView TVIdData;

  @NonNull
  public final TextView TVLk;

  @NonNull
  public final TextView TVStatus;

  @NonNull
  public final TextView TVUdt;

  @NonNull
  public final TextView TVUdtData;

  @NonNull
  public final LinearLayout btnlay;

  @NonNull
  public final Button btntest;

  @NonNull
  public final View bview;

  @NonNull
  public final View sview;

  @NonNull
  public final View vf;

  @NonNull
  public final View vid;

  @NonNull
  public final View vlk;

  private ProductBinding(@NonNull RelativeLayout rootView, @NonNull TextView TVBc,
      @NonNull TextView TVId, @NonNull TextView TVIdData, @NonNull TextView TVLk,
      @NonNull TextView TVStatus, @NonNull TextView TVUdt, @NonNull TextView TVUdtData,
      @NonNull LinearLayout btnlay, @NonNull Button btntest, @NonNull View bview,
      @NonNull View sview, @NonNull View vf, @NonNull View vid, @NonNull View vlk) {
    this.rootView = rootView;
    this.TVBc = TVBc;
    this.TVId = TVId;
    this.TVIdData = TVIdData;
    this.TVLk = TVLk;
    this.TVStatus = TVStatus;
    this.TVUdt = TVUdt;
    this.TVUdtData = TVUdtData;
    this.btnlay = btnlay;
    this.btntest = btntest;
    this.bview = bview;
    this.sview = sview;
    this.vf = vf;
    this.vid = vid;
    this.vlk = vlk;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TV_bc;
      TextView TVBc = ViewBindings.findChildViewById(rootView, id);
      if (TVBc == null) {
        break missingId;
      }

      id = R.id.TV_id;
      TextView TVId = ViewBindings.findChildViewById(rootView, id);
      if (TVId == null) {
        break missingId;
      }

      id = R.id.TV_id_data;
      TextView TVIdData = ViewBindings.findChildViewById(rootView, id);
      if (TVIdData == null) {
        break missingId;
      }

      id = R.id.TV_lk;
      TextView TVLk = ViewBindings.findChildViewById(rootView, id);
      if (TVLk == null) {
        break missingId;
      }

      id = R.id.TV_status;
      TextView TVStatus = ViewBindings.findChildViewById(rootView, id);
      if (TVStatus == null) {
        break missingId;
      }

      id = R.id.TV_udt;
      TextView TVUdt = ViewBindings.findChildViewById(rootView, id);
      if (TVUdt == null) {
        break missingId;
      }

      id = R.id.TV_udt_data;
      TextView TVUdtData = ViewBindings.findChildViewById(rootView, id);
      if (TVUdtData == null) {
        break missingId;
      }

      id = R.id.btnlay;
      LinearLayout btnlay = ViewBindings.findChildViewById(rootView, id);
      if (btnlay == null) {
        break missingId;
      }

      id = R.id.btntest;
      Button btntest = ViewBindings.findChildViewById(rootView, id);
      if (btntest == null) {
        break missingId;
      }

      id = R.id.bview;
      View bview = ViewBindings.findChildViewById(rootView, id);
      if (bview == null) {
        break missingId;
      }

      id = R.id.sview;
      View sview = ViewBindings.findChildViewById(rootView, id);
      if (sview == null) {
        break missingId;
      }

      id = R.id.vf;
      View vf = ViewBindings.findChildViewById(rootView, id);
      if (vf == null) {
        break missingId;
      }

      id = R.id.vid;
      View vid = ViewBindings.findChildViewById(rootView, id);
      if (vid == null) {
        break missingId;
      }

      id = R.id.vlk;
      View vlk = ViewBindings.findChildViewById(rootView, id);
      if (vlk == null) {
        break missingId;
      }

      return new ProductBinding((RelativeLayout) rootView, TVBc, TVId, TVIdData, TVLk, TVStatus,
          TVUdt, TVUdtData, btnlay, btntest, bview, sview, vf, vid, vlk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
