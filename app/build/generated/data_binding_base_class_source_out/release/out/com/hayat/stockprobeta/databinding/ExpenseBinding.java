// Generated by view binder compiler. Do not edit!
package com.hayat.stockprobeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hayat.stockprobeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExpenseBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final EditText Edate;

  @NonNull
  public final EditText Edes;

  @NonNull
  public final EditText amount;

  @NonNull
  public final TextView desTV;

  @NonNull
  public final TextView headpan;

  @NonNull
  public final TextView prTV;

  @NonNull
  public final TextView srateTV;

  private ExpenseBinding(@NonNull LinearLayoutCompat rootView, @NonNull EditText Edate,
      @NonNull EditText Edes, @NonNull EditText amount, @NonNull TextView desTV,
      @NonNull TextView headpan, @NonNull TextView prTV, @NonNull TextView srateTV) {
    this.rootView = rootView;
    this.Edate = Edate;
    this.Edes = Edes;
    this.amount = amount;
    this.desTV = desTV;
    this.headpan = headpan;
    this.prTV = prTV;
    this.srateTV = srateTV;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExpenseBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Edate;
      EditText Edate = ViewBindings.findChildViewById(rootView, id);
      if (Edate == null) {
        break missingId;
      }

      id = R.id.Edes;
      EditText Edes = ViewBindings.findChildViewById(rootView, id);
      if (Edes == null) {
        break missingId;
      }

      id = R.id.amount;
      EditText amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.desTV;
      TextView desTV = ViewBindings.findChildViewById(rootView, id);
      if (desTV == null) {
        break missingId;
      }

      id = R.id.headpan;
      TextView headpan = ViewBindings.findChildViewById(rootView, id);
      if (headpan == null) {
        break missingId;
      }

      id = R.id.prTV;
      TextView prTV = ViewBindings.findChildViewById(rootView, id);
      if (prTV == null) {
        break missingId;
      }

      id = R.id.srateTV;
      TextView srateTV = ViewBindings.findChildViewById(rootView, id);
      if (srateTV == null) {
        break missingId;
      }

      return new ExpenseBinding((LinearLayoutCompat) rootView, Edate, Edes, amount, desTV, headpan,
          prTV, srateTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
